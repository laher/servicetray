on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  deploy:
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: '1.15.6' # The Go version to download (if necessary) and use.
      - name: Build Release Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update 
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -q gcc libgtk-3-dev libappindicator3-dev 
          go build .
          mkdir -p release
          tar -cvzf ./release/servicetray-linux-amd64.tar.gz ./servicetray
          mkdir -p .debpkg/usr/bin
          cp ./servicetray .debpkg/usr/bin/servicetray
          #echo -e "a=1" > .debpkg/usr/lib/samplescript/samplescript.conf
      # - name: Build Release Mac
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #     mkdir -p release
      #     tar -C ./target/release/ -czvf ./release/servicetray-mac.tar.gz ./servicetray
      # - name: Build Release Win
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     mkdir -p release
      #     tar -C ./target/release/ -czvf ./release/servicetray-win.tar.gz ./servicetray.exe
      - uses: jiro4989/build-deb-action@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          package: servicetray
          package_root: .debpkg
          maintainer: am
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: 'amd64'
          desc: 'servicetray is a configurable system tray widget for a group of related services.'
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: true
          files: |
            ./release/*.tar.gz
            ./release/*.zip
            ./release/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # notification:
  #   needs: [deploy]
  #   runs-on: ubuntu-latest
  #   if: "contains(github.event.head_commit.message, '[Released]')"
  #   steps:
  #     - name: Sending complete notifications
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.WEBHOOK }}
  #       uses: Ilshidur/action-discord@master
  #       with:
  #         args: "{{ EVENT_PAYLOAD.repository.full_name }} - A new release is created."
